[gd_scene load_steps=27 format=2]

[ext_resource path="res://Scenes/Player.tscn" type="PackedScene" id=1]
[ext_resource path="res://Scenes/NPCs/Ferret.tscn" type="PackedScene" id=2]
[ext_resource path="res://Scenes/ScreenEffects.tscn" type="PackedScene" id=3]
[ext_resource path="res://icon.png" type="Texture" id=4]
[ext_resource path="res://Scripts/Overworld.gd" type="Script" id=5]
[ext_resource path="res://Graphics/Effects/RippleAnimation.tres" type="Animation" id=6]
[ext_resource path="res://Scenes/NPCs/Leo.tscn" type="PackedScene" id=7]
[ext_resource path="res://Audio/Buddy Main Theme.wav" type="AudioStream" id=8]
[ext_resource path="res://Art/West2.png" type="Texture" id=9]
[ext_resource path="res://Audio/West, Main, East Ambience.wav" type="AudioStream" id=10]
[ext_resource path="res://Scripts/DialogManager.gd" type="Script" id=11]
[ext_resource path="res://Scenes/NPCs/Ferret.gd" type="Script" id=12]

[sub_resource type="VisualShaderNodeScalarOp" id=4]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=5]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeInput" id=6]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeCompare" id=7]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.0, 2, 0.1 ]

[sub_resource type="VisualShaderNodeScalarUniform" id=8]
uniform_name = "w"

[sub_resource type="VisualShaderNodeScalarUniform" id=9]
uniform_name = "x"

[sub_resource type="VisualShaderNodeVectorDecompose" id=10]

[sub_resource type="VisualShader" id=11]
code = "shader_type canvas_item;
uniform float x;
uniform float w;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorDecompose:9
	float n_out9p0 = n_out2p0.x;
	float n_out9p1 = n_out2p0.y;
	float n_out9p2 = n_out2p0.z;

// ScalarOp:10
	float n_out10p0 = n_out9p0 + n_out9p1;

// ScalarOp:11
	float n_in11p1 = 2.00000;
	float n_out11p0 = n_out10p0 / n_in11p1;

// ScalarUniform:8
	float n_out8p0 = x;

// ScalarUniform:7
	float n_out7p0 = w;

// Compare:5
	bool n_out5p0 = (abs(n_out11p0 - n_out8p0) < n_out7p0);
// Output:0
	COLOR.rgb = vec3(n_out5p0 ? 1.0 : 0.0);
	COLOR.a = (n_out5p0 ? 1.0 : 0.0);

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -684.958, 70.5 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 560, 180 )
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( -360, 200 )
nodes/fragment/5/node = SubResource( 7 )
nodes/fragment/5/position = Vector2( 440, 200 )
nodes/fragment/7/node = SubResource( 8 )
nodes/fragment/7/position = Vector2( 60, 540 )
nodes/fragment/8/node = SubResource( 9 )
nodes/fragment/8/position = Vector2( 60, 480 )
nodes/fragment/9/node = SubResource( 10 )
nodes/fragment/9/position = Vector2( -180, 200 )
nodes/fragment/10/node = SubResource( 4 )
nodes/fragment/10/position = Vector2( 40, 200 )
nodes/fragment/11/node = SubResource( 5 )
nodes/fragment/11/position = Vector2( 240, 200 )
nodes/fragment/connections = PoolIntArray( 5, 0, 0, 0, 5, 0, 0, 1, 7, 0, 5, 2, 8, 0, 5, 1, 2, 0, 9, 0, 9, 0, 10, 0, 9, 1, 10, 1, 10, 0, 11, 0, 11, 0, 5, 0 )

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 11 )
shader_param/x = 0.5
shader_param/w = 0.006

[sub_resource type="Animation" id=3]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:material:shader_param/time")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 2.5 ]
}

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
uniform float time;
uniform float width;
uniform vec4 color: hint_color;

float ring(vec3 u, float rad, float wth) {
	float circle = distance(u, vec3(0.5, 0.5, 0.0)) / 0.5;

	float minVal = rad - (wth / 2.0);
	float maxVal = rad + (wth / 2.0);

	vec3 y = vec3(0.0, 0.0, 0.0);
	if(abs(circle - maxVal) < 0.0)
	{
		y = vec3(1.0, 1.0, 1.0);
	}
	else if(circle < maxVal)
	{
		y = vec3(1.0, 1.0, 1.0);
	}

	vec3 x = vec3(0.0, 0.0, 0.0);
	if(abs(circle - rad) < (wth /  2.0))
	{
		x =  vec3(1.0, 1.0, 1.0);
	}
	
	vec3 third = vec3(0.333333, 0.333333, 0.333333);
	float z = dot(x, third) * circle;
	float w = smoothstep(minVal, rad, z) * (1.0 - smoothstep(rad, maxVal, z));
	return dot(y, third) * w;	
}

void vertex() {
// Output:0

}

void fragment() {
	// x = speed; y = time; z = width; a = alpha
	vec4 rings[4] = vec4[4] (
		vec4(0.7, 0.0, width * 2.3, 1.0),
		vec4(0.8, 0.3, width, 0.7),
		vec4(0.9, 0.4, width * 0.7, 0.5),
		vec4(1.0, 0.5, width * 0.4, 0.3)
	);
	
	vec3 uv = vec3(UV, 0.0);
	float circle = distance(uv, vec3(0.5, 0.5, 0.0)) / 0.5;
	float alpha = 0.0;
	for (int i = 0; i < rings.length(); i++) {
		if (time >= rings[i].y) {
			alpha += ring(uv, rings[i].x * (time - rings[i].y), rings[i].z) * rings[i].a;
		}
	}
	alpha *= color.a;
	alpha *= max(1.0-circle, 0.0);
	COLOR = vec4(color.xyz, alpha);

}

void light() {
// Output:0

}"

[sub_resource type="ShaderMaterial" id=13]
shader = SubResource( 1 )
shader_param/time = 0.56005
shader_param/width = 0.074
shader_param/color = Color( 0.72549, 0.835294, 0.952941, 1 )

[sub_resource type="Animation" id=14]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Music:volume_db")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[sub_resource type="Animation" id=15]
resource_name = "music_fade"
length = 1.5
tracks/0/type = "bezier"
tracks/0/path = NodePath("Music:volume_db")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 1, -3.17017, -80, -0.3, 39.6835, 0.25, 0 ),
"times": PoolRealArray( 0, 1.5 )
}

[node name="Overworld" type="Viewport"]
size = Vector2( 1920, 1080 )
transparent_bg = true
script = ExtResource( 5 )
initialRoom = "Main-Two"

[node name="PlayContainer" type="YSort" parent="."]

[node name="SideBars" type="CanvasLayer" parent="PlayContainer"]
layer = 4
follow_viewport_enable = true

[node name="Bars" type="Sprite" parent="PlayContainer/SideBars"]
modulate = Color( 0, 0, 0, 1 )
z_index = 2
texture = ExtResource( 9 )
centered = false

[node name="Bars2" type="Sprite" parent="PlayContainer/SideBars"]
modulate = Color( 0, 0, 0, 1 )
z_index = 2
texture = ExtResource( 9 )
centered = false

[node name="Player" parent="PlayContainer" instance=ExtResource( 1 )]
z_as_relative = false
collision/safe_margin = 1.0

[node name="Camera2D" type="Camera2D" parent="PlayContainer/Player"]
current = true

[node name="EffectContainer" type="CanvasLayer" parent="PlayContainer/Player/Camera2D"]
layer = 3

[node name="ScreenEffects" parent="PlayContainer/Player/Camera2D/EffectContainer" instance=ExtResource( 3 )]
visible = false
camera_active = true
noise_scale = 0.15
vignette_radius = 0.585
vignette_blur = 0.33

[node name="RoomContainer" type="YSort" parent="PlayContainer"]
z_as_relative = false

[node name="Unused" type="Node" parent="PlayContainer"]

[node name="Splash" type="Sprite" parent="PlayContainer/Unused"]
visible = false
material = SubResource( 12 )
position = Vector2( 736.709, 306.29 )
texture = ExtResource( 4 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="PlayContainer/Unused/Splash"]
method_call_mode = 1
anims/RESET = SubResource( 3 )
anims/ripple = ExtResource( 6 )

[node name="Sprite" type="Sprite" parent="PlayContainer/Unused/Splash"]
material = SubResource( 13 )
position = Vector2( 0, 12.901 )
scale = Vector2( 1, 0.587 )
z_index = -1
texture = ExtResource( 4 )

[node name="Music" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 8 )

[node name="Ambience" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 10 )
autoplay = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 14 )
anims/music_fade = SubResource( 15 )

[node name="DialogManager" type="Node" parent="."]
script = ExtResource( 11 )

[node name="Ferret" parent="." instance=ExtResource( 2 )]
script = ExtResource( 12 )
roomNames = PoolStringArray( "West-Two" )
roomPos = PoolVector2Array( 930, 460 )

[node name="Leo" parent="." instance=ExtResource( 7 )]
